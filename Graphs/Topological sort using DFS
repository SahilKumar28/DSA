class Solution {
  public:
  
    void dfs(int u, vector<int> adj[], vector<int>& vis, stack<int> &st){
        vis[u] = 1;
        
        for(auto v : adj[u]){
            if(!vis[v])
                dfs(v, adj, vis, st);
        }
        
        st.push(u);
    }
  
    vector<int> topoSort(int V, vector<vector<int>>& edges) {
        vector<int> adj[V];
        vector<int> ans;
        vector<int> vis(V, 0);
        stack<int> st;
        
        for(auto &edge : edges){
            int u = edge[0];
            int v = edge[1];
            adj[u].push_back(v);
        }
        
        for(int i = 0; i<V; i++){
            if(!vis[i])
                dfs(i, adj, vis, st);
        }
        
        while(!st.empty()){
            ans.push_back(st.top());
            st.pop();
        }
     return ans;   
    }
};
