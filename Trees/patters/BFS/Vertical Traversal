/*
// Tree Node
class Node {
  public:
    int data;
    Node* left;
    Node* right;

    // Constructor to initialize a new node
    Node(int val) {
        data = val;
        left = NULL;
        right = NULL;
    }
};
*/

class Solution {
  public:
    vector<vector<int>> verticalOrder(Node *root) {
        queue<pair<Node*,pair<int,int>>>q;
        map<int,map<int,set<int>>>m;
        vector<vector<int>>ans;
        q.push({root,{0,0}});
        
        while(!q.empty()){
            auto front = q.front();
            q.pop();
            
            Node* node = front.first;
            int x = front.second.first;
            int y = front.second.second;
            
            m[x][y].insert(node->data);
            
            if(node->left)q.push({node->left,{x-1,y+1}});
            if(node->right)q.push({node->right,{x+1,y+1}});
        }
        
        for(auto x : m){
            vector<int>temp;
            for(auto y : x.second){
                temp.insert(temp.end(),y.second.begin(),y.second.end());
            }
            ans.push_back(temp);
        }
        return ans;
    }
};
