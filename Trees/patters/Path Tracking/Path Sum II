/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    bool isLeaf(TreeNode* node){
        return !node->left && !node->right;
    }

    void PTL(TreeNode* node, vector<vector<int>>&paths,vector<int>&temp, int &sum, int ts){
        if(node==NULL)return;

        sum = sum + node->val;
        temp.push_back(node->val);

        if(isLeaf(node) && sum==ts)paths.push_back(temp);

        PTL(node->left,paths,temp,sum,ts);
        PTL(node->right,paths,temp,sum,ts);

        sum = sum - node->val;
        temp.pop_back();
    }

    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<vector<int>>paths;
        vector<int>temp;
        int sum = 0;
        PTL(root,paths,temp,sum,targetSum);
        return paths;
    }
};
